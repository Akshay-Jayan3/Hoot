---
description: 
globs: 
alwaysApply: false
---
# Repo Structure & Feature Update Rules

1. **Component Organization**
   - All UI components must reside in `src/components/ComponentName/`.
   - Each major UI section (e.g., player, sidebar, nav) should be a subfolder with its own `index.js` and `styles.module.scss`.
   - Use modular SCSS (`styles.module.scss`) for all component styles.

2. **Pages**
   - Page-level logic/components go in `src/pages/PageName/`.
   - Pages should import and compose components from `src/components/`.

3. **Context & State**
   - Shared/global state must be managed in `src/context/`.
   - Add new context files for new global features (e.g., UI mode toggles).
   - Always use hooks (e.g., `useTheme`) for context access.

5. **Routing**
   - All routes are defined in `src/Routes/`.
   - Use lazy loading for page components.

6. **Adding New Features**
   - Scaffold new features as modular components with their own folder and style file.
   - If a feature is global, update context and add a toggle in `App.js`.
   - Update or add rules here if the structure or process changes.

7. **Naming & Conventions**
   - Use PascalCase for component and folder names.
   - Use camelCase for variables and functions.
   - Use clear, descriptive names for all files and exports.

8. **Documentation**
   - Update `README.md` with new features or major changes.
   - Document any new context or global state in code comments.


